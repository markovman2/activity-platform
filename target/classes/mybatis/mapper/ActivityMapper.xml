<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cong.mapper.ActivityMapper">
    <select id="queryActivityList" resultType="Activity">
        select * from activity
    </select>
    <select id="queryActivityByActivityId" parameterType="Integer" resultType="Activity">
        select * from activity where id = #{id}
    </select>
    <select id="queryActivityByStatus" parameterType="Integer" resultType="Activity">
        select * from activity where status = #{status}
    </select>
    <select id="queryActivityByName" parameterType="String" resultType="Activity">
        select * from activity where name = #{name}
    </select>
    <select id="queryAvailableActivityByTime" resultType="Activity">
        select * from activity where startTime &gt; #{currentTime}
    </select>
    <select id="queryGoingActivityByTime" resultType="Activity">
        select * from activity where #{currentTime} >= startTime and endTime >= #{currentTime}
    </select>
    <select id="queryFinishedActivityByTime" resultType="Activity">
        select * from activity where #{currentTime} &gt; endTime
    </select>
    <select id="querySelfActivity" resultType="Activity">
        select * from activity a where a.id in (select b.activityId from user2activity b right join user c on b.userId = c.id where c.email = #{email}) order by startTime
    </select>
    <select id="querySelfFavouriteActivity" resultType="Activity">
        select * from activity a where a.id in (select b.activityId from user2favourite_activity b right join user c on b.userId = c.id where c.email = #{email}) order by startTime
    </select>
    <insert id="addActivity" parameterType="Activity">
        insert into activity (id, name, introduction, startTime, endTime, capacity, status, model) values (#{id}, #{name}, #{introduction}, #{startTime}, #{endTime}, #{capacity}, #{status}, #{model})
    </insert>
    <update id="updateActivity" parameterType="Activity">
        update activity set name=#{name}, introduction=#{introduction}, startTime=#{startTime}, endTime=#{endTime}, capacity=#{capacity}, status=#{status}, model=#{model} where id = #{id}
    </update>
    <delete id="deleteActivity" parameterType="int">
        delete from activity where id = #{id}
    </delete>
</mapper>